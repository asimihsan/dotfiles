# interactive only
[[ -o interactive ]] || return

# completions (use a cache file; skip security scan if perms are clean)
ZSH_COMPDUMP="${XDG_CACHE_HOME:-$HOME/.cache}/zsh/zcompdump-${ZSH_VERSION}"
autoload -Uz compinit
mkdir -p "${XDG_CACHE_HOME:-$HOME/.cache}/zsh"
compinit -C -d "$ZSH_COMPDUMP"
[[ -r "$ZSH_COMPDUMP" ]] && zcompile "$ZSH_COMPDUMP" 2>/dev/null

##### Interactive hooks / prompt / widgets
. "$HOME/.cargo/env" 2>/dev/null || true

# fzf (no subshell)
hb=${HOMEBREW_PREFIX:-/opt/homebrew}
if [[ -r "$hb/opt/fzf/shell/completion.zsh" ]]; then
  source "$hb/opt/fzf/shell/completion.zsh"
  source "$hb/opt/fzf/shell/key-bindings.zsh"
fi

if command -v jj >/dev/null; then
  _jjc="${XDG_CACHE_HOME:-$HOME/.cache}/zsh/jj_completion.zsh"
  mkdir -p "${XDG_CACHE_HOME:-$HOME/.cache}/zsh"
  [[ -r $_jjc ]] || jj util completion zsh >| "$_jjc" 2>/dev/null
  source "$_jjc"
fi

##### Interactive-only PATH tweaks
export PATH="$HOME/.bin:$HOME/bin:/usr/local/bin:$PATH"

##### Homebrew tool paths using HOMEBREW_PREFIX
if [[ -n ${HOMEBREW_PREFIX-} ]]; then
    export PATH="${HOMEBREW_PREFIX}/opt/sqlite/bin:$PATH"
    export PATH="$PATH:${HOMEBREW_PREFIX}/opt/tidy-html5/bin"
    export PATH="${HOMEBREW_PREFIX}/opt/protobuf/bin:$PATH"
    export PATH="/opt/homebrew/opt/protobuf@3/bin:$PATH"
fi

##### Build flags
export LDFLAGS="-L/opt/homebrew/opt/libiconv/lib"
export CPPFLAGS="-I/opt/homebrew/opt/libiconv/include"

##### Secrets helpers
load_secret() {
    local secret_path=$1
    local var_name=$2
    export "$var_name"="$(op read --account my.1password.com "op://$secret_path")"
}

load_all_secrets() {
    eval "$(manage_secrets.py)"
    echo "All secrets have been loaded."
}

##### Aliases & helpers
alias ll='eza -lh --git'
alias ls="gls --color"
alias du="dust"
alias pmc='coyote test'
alias zstd=/opt/homebrew/opt/zstd/bin/zstd
alias vim=nvim
alias lg='GIT_CONFIG_GLOBAL=~/.gitconfig-lazygit lazygit'
alias ar=/usr/bin/ar

export _ZO_RESOLVE_SYMLINKS=1

##### Zellij helpers
zr  () { command zellij run --name "$*"        -- zsh -ic "$*"; }
zrf () { command zellij run --floating --name "$*" -- zsh -ic "$*"; }
zri () { command zellij run --in-place --name "$*" -- zsh -ic "$*"; }

# ---- Atuin: load only when you hit Ctrl-R ----
_atuin_lazy() {
  unfunction _atuin_lazy
  eval "$(atuin init zsh)"
  zle _atuin_search_widget
}
zle -N _atuin_lazy
bindkey -M emacs '^R' _atuin_lazy
bindkey -M viins '^R' _atuin_lazy
bindkey -M vicmd '^R' _atuin_lazy

command -v starship >/dev/null && eval "$(starship init zsh)"
